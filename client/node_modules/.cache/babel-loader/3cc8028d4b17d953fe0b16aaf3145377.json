{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile_image/setProfileImage.js\";\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nconst SetProfileImage = props => {\n  const [toggleDisplay, setToggleDisplay] = useState(false);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      setToggleDisplay(!toggleDisplay);\n    },\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Click Me\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: toggleDisplay,\n    toggle: () => {\n      setToggleDisplay(!toggleDisplay);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    width: 300,\n    height: 300,\n    onCrop: this.onCrop,\n    onClose: this.onClose,\n    src: this.state.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })))));\n};\n\nSetProfileImage.propTypes = {};\nexport default SetProfileImage;","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile_image/setProfileImage.js"],"names":["React","Fragment","useState","PropTypes","Modal","ModalHeader","ModalBody","SetProfileImage","props","toggleDisplay","setToggleDisplay","e","onCrop","onClose","state","src","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,YAA9C;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAGS,CAAD,IAAO;AACdD,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEA,aADV;AAEE,IAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,MAAM,EAAE,KAAKG,MAHf;AAIE,IAAA,OAAO,EAAE,KAAKC,OAJhB;AAKE,IAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CAZF,CADF;AAiCD,CAnCD;;AAqCAR,eAAe,CAACS,SAAhB,GAA4B,EAA5B;AAEA,eAAeT,eAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nconst SetProfileImage = (props) => {\n  const [toggleDisplay, setToggleDisplay] = useState(false);\n  return (\n    <Fragment>\n      <div>\n        <button\n          onClick={(e) => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n          className='btn btn-success'\n        >\n          Click Me\n        </button>\n      </div>\n\n      <div className='container'>\n        <Modal\n          isOpen={toggleDisplay}\n          toggle={() => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n        >\n          <ModalBody>\n            <Avatar\n              width={300}\n              height={300}\n              onCrop={this.onCrop}\n              onClose={this.onClose}\n              src={this.state.src}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    </Fragment>\n  );\n};\n\nSetProfileImage.propTypes = {};\n\nexport default SetProfileImage;\n"]},"metadata":{},"sourceType":"module"}