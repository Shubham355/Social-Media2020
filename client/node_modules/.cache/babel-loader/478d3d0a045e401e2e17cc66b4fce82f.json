{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileByID } from '../../actions/profile';\n\nconst IndividualProfile = ({\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    get;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-gird my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"No Experience Credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"No Education Credentials\")), profile.githubusername && /*#__PURE__*/React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps)(IndividualProfile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileByID","IndividualProfile","profile","loading","get","experience","length","map","_id","education","githubusername","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAX,CAAD,KAAuC;AAC7DZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,GAAG;AACN,GAFQ,CAAT;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEF,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,OAAO,CAACG,UAAR,CAAmBC,MAAnB,GAA4B,CAA5B,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACG,UAAR,CAAmBE,GAAnB,CAAwBF,UAAD,iBACtB,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAEA,UAAU,CAACG,GAAnC;AAAwC,IAAA,UAAU,EAAEH,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCATJ,CAHF,eAgBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGH,OAAO,CAACO,SAAR,CAAkBH,MAAlB,GAA2B,CAA3B,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACO,SAAR,CAAkBF,GAAlB,CAAuBE,SAAD,iBACrB,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,SAAS,CAACD,GAAjC;AAAsC,IAAA,SAAS,EAAEC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATJ,CAhBF,EA6BGP,OAAO,CAACQ,cAAR,iBACC,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAER,OAAO,CAACQ,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADF;AAmCD,CAxCD;;AA0CAT,iBAAiB,CAACU,SAAlB,GAA8B;AAC5BT,EAAAA,OAAO,EAAET,SAAS,CAACmB,MAAV,CAAiBC;AADE,CAA9B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADmB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACoB,eAAD,CAAP,CAAyBb,iBAAzB,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileByID } from '../../actions/profile'\n\nconst IndividualProfile = ({ profile: { profile, loading } }) => {\n    useEffect(() => {\n        get\n    })\n\n  return (\n    <div className='profile-gird my-1'>\n      <ProfileTop profile={profile} />\n      <ProfileAbout profile={profile} />\n      <div className='profile-exp bg-white p-2'>\n        <h2 className='text-primary'>Experience</h2>\n        {profile.experience.length > 0 ? (\n          <Fragment>\n            {profile.experience.map((experience) => (\n              <ProfileExperience key={experience._id} experience={experience} />\n            ))}\n          </Fragment>\n        ) : (\n          <h4>No Experience Credentials</h4>\n        )}\n      </div>\n\n      <div className='profile-edu bg-white p-2'>\n        <h2 className='text-primary'>Education</h2>\n        {profile.education.length > 0 ? (\n          <Fragment>\n            {profile.education.map((education) => (\n              <ProfileEducation key={education._id} education={education} />\n            ))}\n          </Fragment>\n        ) : (\n          <h4>No Education Credentials</h4>\n        )}\n      </div>\n\n      {profile.githubusername && (\n        <ProfileGithub username={profile.githubusername} />\n      )}\n    </div>\n  );\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps)(IndividualProfile);\n"]},"metadata":{},"sourceType":"module"}