{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile_image/setProfileImage.js\";\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar-edit';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport Profile_Picture from './Profile_Picture'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SetProfileImage = props => {\n  const [toggleDisplay, setToggleDisplay] = useState(false);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      setToggleDisplay(!toggleDisplay);\n    },\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Click Me\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myModal\",\n    class: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Some text in the Modal..\"))));\n};\n\nSetProfileImage.propTypes = {};\nexport default SetProfileImage;","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile_image/setProfileImage.js"],"names":["React","Fragment","useState","PropTypes","Avatar","Modal","ModalHeader","ModalBody","Profile_Picture","SetProfileImage","props","toggleDisplay","setToggleDisplay","e","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,YAA9C;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAGW,CAAD,IAAO;AACdD,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAoCE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CADF,CApCF,CADF;AA6CD,CAhDD;;AAkDAF,eAAe,CAACK,SAAhB,GAA4B,EAA5B;AAEA,eAAeL,eAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar-edit';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport Profile_Picture from './Profile_Picture';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SetProfileImage = (props) => {\n  const [toggleDisplay, setToggleDisplay] = useState(false);\n\n  return (\n    <Fragment>\n      <div>\n        <button\n          onClick={(e) => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n          className='btn btn-success'\n        >\n          Click Me\n        </button>\n      </div>\n      {/* \n      <Modal\n        isOpen={toggleDisplay}\n        toggle={() => {\n          setToggleDisplay(!toggleDisplay);\n        }}\n      >\n        <ModalHeader\n          toggle={() => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n        >\n          Change Profile Image{' '}\n        </ModalHeader>\n        <ModalBody>\n          <div className='container-fluid'>\n            <div className='row'>\n              <div className='col-12'>\n                <Profile_Picture />\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal> */}\n\n      <div id='myModal' class='modal'>\n        <div class='modal-content'>\n          <span class='close'>&times;</span>\n          <p>Some text in the Modal..</p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nSetProfileImage.propTypes = {};\n\nexport default SetProfileImage;\n"]},"metadata":{},"sourceType":"module"}