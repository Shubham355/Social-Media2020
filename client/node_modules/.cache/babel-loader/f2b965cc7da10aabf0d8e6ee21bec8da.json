{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/Profile.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; // import { getCurrentProfile } from '../../actions/profile';\n// import { getCurrentUserAllPosts } from '../../actions/post';\n\nimport ProfileActions from './ProfileActions';\nimport Spinner from '../layout/Spinner';\nimport ProfileData from './ProfileData';\nimport axios from 'axios';\n\nconst Profile = ({\n  // getCurrentProfile,\n  // getCurrentUserAllPosts,\n  auth: {\n    user\n  } // profile: { profile, loading },\n  // post: { posts },\n\n}) => {\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(true);\n  const [post, setPost] = useState(null);\n  const [postLoading, setPostLoading] = useState(true);\n\n  const getCurrentProfile = async () => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      setProfile(res.data);\n      setProfileLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getCurrentUserAllPosts = async () => {\n    try {\n      const res = await axios.get('/api/posts/user/me');\n      setPost(res.data);\n      setPostLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getCurrentProfile();\n    getCurrentUserAllPosts();\n    scrollToTop();\n  }, [getCurrentProfile, getCurrentUserAllPosts]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  return profileLoading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), console.log(profile), console.log(post), /*#__PURE__*/React.createElement(ProfileData, {\n    profile: profile,\n    posts: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"You have not yet setup a profile, please add some info\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Create Profile\")));\n};\n\nProfile.propTypes = {\n  // getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  // getCurrentUserAllPosts: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired // profile: PropTypes.object.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth // profile: state.profile,\n  // post: state.post,\n\n});\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/Profile.js"],"names":["React","useState","useEffect","Fragment","PropTypes","Link","connect","ProfileActions","Spinner","ProfileData","axios","Profile","auth","user","profile","setProfile","profileLoading","setProfileLoading","post","setPost","postLoading","setPostLoading","getCurrentProfile","res","get","data","err","console","error","getCurrentUserAllPosts","scrollToTop","window","scrollTo","log","propTypes","deleteAccount","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import { getCurrentProfile } from '../../actions/profile';\n// import { getCurrentUserAllPosts } from '../../actions/post';\nimport ProfileActions from './ProfileActions';\nimport Spinner from '../layout/Spinner';\nimport ProfileData from './ProfileData';\nimport axios from 'axios';\n\nconst Profile = ({\n  // getCurrentProfile,\n  // getCurrentUserAllPosts,\n  auth: { user },\n  // profile: { profile, loading },\n  // post: { posts },\n}) => {\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(true);\n  const [post, setPost] = useState(null);\n  const [postLoading, setPostLoading] = useState(true);\n\n  const getCurrentProfile = async () => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      setProfile(res.data);\n      setProfileLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getCurrentUserAllPosts = async () => {\n    try {\n      const res = await axios.get('/api/posts/user/me');\n      setPost(res.data);\n      setPostLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getCurrentProfile();\n    getCurrentUserAllPosts();\n    scrollToTop();\n  }, [getCurrentProfile, getCurrentUserAllPosts]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  return profileLoading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {/* <h1 className='large text-primary'>Profile</h1> */}\n      {/* <p className='lead'>\n        <i className='fas fa-user'></i> Welcome {user && user.name}\n      </p> */}\n      {profile !== null ? (\n        <Fragment>\n          <ProfileActions />\n          {console.log(profile)}\n          {console.log(post)}\n          <ProfileData profile={profile} posts={post} />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  // getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  // getCurrentUserAllPosts: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  // profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  // profile: state.profile,\n  // post: state.post,\n});\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}