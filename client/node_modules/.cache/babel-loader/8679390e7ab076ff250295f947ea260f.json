{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/SinglePost.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport PostItem from './PostItem';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\n\nconst SinglePost = ({\n  getPost,\n  match,\n  post: {\n    post,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPost(match.params.post_id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nSinglePost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(SinglePost);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/SinglePost.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getPost","PostItem","Spinner","Link","SinglePost","match","post","loading","params","post_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAWK,EAAAA,KAAX;AAAkBC,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAxB,CAAD,KAAiD;AAClEX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACK,KAAK,CAACG,MAAN,CAAaC,OAAd,CAAP;AACD,GAFQ,EAEN,CAACT,OAAD,CAFM,CAAT;AAIA,SAAOO,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAHF;AAUD,CAfD;;AAiBAF,UAAU,CAACM,SAAX,GAAuB;AACrBV,EAAAA,OAAO,EAAEF,SAAS,CAACa,IAAV,CAAeC,UADH;AAErBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAFF,CAAvB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAsCI,UAAtC,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport PostItem from './PostItem';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\n\nconst SinglePost = ({ getPost, match, post: { post, loading } }) => {\n  useEffect(() => {\n    getPost(match.params.post_id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/dashboard' className='btn'>\n        Go Back\n      </Link>\n      <PostItem post={post} showActions={false} />\n    </Fragment>\n  );\n};\n\nSinglePost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(SinglePost);\n"]},"metadata":{},"sourceType":"module"}