{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import{getCurrentProfile}from'../../actions/profile';import{getCurrentUserAllPosts}from'../../actions/post';import ProfileActions from'./ProfileActions';import Spinner from'../layout/Spinner';import ProfileData from'./ProfileData';var Profile=function Profile(_ref){var getCurrentProfile=_ref.getCurrentProfile,getCurrentUserAllPosts=_ref.getCurrentUserAllPosts,user=_ref.auth.user,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading,posts=_ref.post.posts;useEffect(function(){getCurrentProfile();getCurrentUserAllPosts();scrollToTop();},[getCurrentProfile]);function scrollToTop(){window.scrollTo(0,0);}return loading&&profile===null?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,profile!==null?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ProfileActions,null),/*#__PURE__*/React.createElement(ProfileData,{profile:profile,posts:posts})):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"You have not yet setup a profile, please add some info\"),/*#__PURE__*/React.createElement(Link,{to:\"/create-profile\",className:\"btn btn-primary my-1\"},\"Create Profile\")));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile,post:state.post};};export default connect(mapStateToProps,{getCurrentProfile:getCurrentProfile,getCurrentUserAllPosts:getCurrentUserAllPosts})(Profile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/Profile.js"],"names":["React","useEffect","Fragment","Link","connect","getCurrentProfile","getCurrentUserAllPosts","ProfileActions","Spinner","ProfileData","Profile","user","auth","profile","loading","posts","post","scrollToTop","window","scrollTo","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,KAAkC,uBAAlC,CACA,OAASC,sBAAT,KAAuC,oBAAvC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAMV,IALJL,CAAAA,iBAKI,MALJA,iBAKI,CAJJC,sBAII,MAJJA,sBAII,CAHIK,IAGJ,MAHJC,IAGI,CAHID,IAGJ,mBAFJE,OAEI,CAFOA,OAEP,cAFOA,OAEP,CAFgBC,OAEhB,cAFgBA,OAEhB,CADIC,KACJ,MADJC,IACI,CADID,KACJ,CACJd,SAAS,CAAC,UAAM,CACdI,iBAAiB,GACjBC,sBAAsB,GACtBW,WAAW,GACZ,CAJQ,CAIN,CAACZ,iBAAD,CAJM,CAAT,CAMA,QAASY,CAAAA,WAAT,EAAuB,CACrBC,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,CAED,MAAOL,CAAAA,OAAO,EAAID,OAAO,GAAK,IAAvB,cACL,oBAAC,OAAD,MADK,cAGL,oBAAC,QAAD,MAKGA,OAAO,GAAK,IAAZ,cACC,oBAAC,QAAD,mBACE,oBAAC,cAAD,MADF,cAEE,oBAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,CAA+B,KAAK,CAAEE,KAAtC,EAFF,CADD,cAMC,oBAAC,QAAD,mBACE,sFADF,cAEE,oBAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,sBAArC,mBAFF,CAXJ,CAHF,CAuBD,CAxCD,CAkDA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCT,IAAI,CAAES,KAAK,CAACT,IADsB,CAElCC,OAAO,CAAEQ,KAAK,CAACR,OAFmB,CAGlCG,IAAI,CAAEK,KAAK,CAACL,IAHsB,CAAZ,EAAxB,CAMA,cAAeZ,CAAAA,OAAO,CAACgB,eAAD,CAAkB,CACtCf,iBAAiB,CAAjBA,iBADsC,CAEtCC,sBAAsB,CAAtBA,sBAFsC,CAAlB,CAAP,CAGZI,OAHY,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { getCurrentUserAllPosts } from '../../actions/post';\nimport ProfileActions from './ProfileActions';\nimport Spinner from '../layout/Spinner';\nimport ProfileData from './ProfileData';\n\nconst Profile = ({\n  getCurrentProfile,\n  getCurrentUserAllPosts,\n  auth: { user },\n  profile: { profile, loading },\n  post: { posts },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n    getCurrentUserAllPosts();\n    scrollToTop();\n  }, [getCurrentProfile]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {/* <h1 className='large text-primary'>Profile</h1> */}\n      {/* <p className='lead'>\n        <i className='fas fa-user'></i> Welcome {user && user.name}\n      </p> */}\n      {profile !== null ? (\n        <Fragment>\n          <ProfileActions />\n          <ProfileData profile={profile} posts={posts} />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  getCurrentUserAllPosts: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  getCurrentUserAllPosts,\n})(Profile);\n"]},"metadata":{},"sourceType":"module"}