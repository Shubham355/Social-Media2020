{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  getProfileByID,\n  profile: {\n    profile,\n    loading,\n    error\n  },\n  clearProfile\n}) => {\n  useEffect(() => {\n    clearProfile();\n    getProfileByID(match.params.user_id);\n    scrollToTop();\n  }, [getProfileByID, match]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  if (loading && profile === null) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    if (profile === null && error) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProfileNotFound, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/dashboard\",\n        className: \"btn btn-light my-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Go Back\"), /*#__PURE__*/React.createElement(ProfileData, {\n        profile: profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n}; //   return loading && profile === null ? (\n//     <Spinner />\n//   ) : profile !== null ? (\n//     <Fragment>\n//       <Link to='/dashboard' className='btn btn-light my-1'>\n//         Go Back\n//       </Link>\n//       <ProfileData profile={profile} />\n//     </Fragment>\n//   ) : (\n//     <Fragment>\n//       <ProfileNotFound />\n//     </Fragment>\n//   );\n\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByID,\n  clearProfile\n})(IndividualProfile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getProfileByID","clearProfile","Link","ProfileData","Spinner","ProfileNotFound","IndividualProfile","match","profile","loading","error","params","user_id","scrollToTop","window","scrollTo","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,uBAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,KADyB;AAEzBP,EAAAA,cAFyB;AAGzBQ,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAHgB;AAIzBT,EAAAA;AAJyB,CAAD,KAKpB;AACJL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACZD,IAAAA,cAAc,CAACO,KAAK,CAACI,MAAN,CAAaC,OAAd,CAAd;AAEAC,IAAAA,WAAW;AACZ,GALQ,EAKN,CAACb,cAAD,EAAiBO,KAAjB,CALM,CAAT;;AAOA,WAASM,WAAT,GAAuB;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAED,MAAIN,OAAO,IAAID,OAAO,KAAK,IAA3B,EAAiC;AAC/B,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,MAMO;AACL,QAAIA,OAAO,KAAK,IAAZ,IAAoBE,KAAxB,EAA+B;AAC7B,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO;AACL,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;AACF;AACF,CA1CD,C,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAF,iBAAiB,CAACU,SAAlB,GAA8B;AAC5BR,EAAAA,OAAO,EAAEV,SAAS,CAACmB,MAAV,CAAiBC,UADE;AAE5BlB,EAAAA,cAAc,EAAEF,SAAS,CAACqB,IAAV,CAAeD,UAFH;AAG5BjB,EAAAA,YAAY,EAAEH,SAAS,CAACqB,IAAV,CAAeD;AAHD,CAA9B;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CACbK,iBADa,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  getProfileByID,\n  profile: { profile, loading, error },\n  clearProfile,\n}) => {\n  useEffect(() => {\n    clearProfile();\n    getProfileByID(match.params.user_id);\n\n    scrollToTop();\n  }, [getProfileByID, match]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  if (loading && profile === null) {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    );\n  } else {\n    if (profile === null && error) {\n      return (\n        <Fragment>\n          <ProfileNotFound />\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Link to='/dashboard' className='btn btn-light my-1'>\n            Go Back\n          </Link>\n\n          <ProfileData profile={profile} />\n        </Fragment>\n      );\n    }\n  }\n};\n\n//   return loading && profile === null ? (\n//     <Spinner />\n//   ) : profile !== null ? (\n//     <Fragment>\n//       <Link to='/dashboard' className='btn btn-light my-1'>\n//         Go Back\n//       </Link>\n\n//       <ProfileData profile={profile} />\n//     </Fragment>\n//   ) : (\n//     <Fragment>\n//       <ProfileNotFound />\n//     </Fragment>\n//   );\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfileByID, clearProfile })(\n  IndividualProfile\n);\n"]},"metadata":{},"sourceType":"module"}