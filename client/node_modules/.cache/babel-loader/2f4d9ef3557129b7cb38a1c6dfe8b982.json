{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/SearchBar.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\n\nconst SearchBar = ({\n  getAllProfiles,\n  profiles\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n\n  const handleChange = e => {\n    let profileList = profiles.map(profile => {\n      if (profile.user !== null) {\n        return profile.user;\n      }\n    });\n    profileList = profileList.filter(list => list !== undefined);\n    profileList.map(list => console.log(list.name));\n\n    if (e !== '') {\n      // Get matches to current text input\n      let matches = profileList.filter(profile => {\n        const regex = new RegExp(`${e}`, 'gi');\n\n        if (profile.name.match(regex)) {\n          return profile;\n        }\n      });\n      console.log(matches);\n\n      if (e.length === 0) {\n        matches = [];\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"searchBar\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"match-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profile.profiles\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(SearchBar);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/SearchBar.js"],"names":["React","useEffect","PropTypes","connect","getAllProfiles","SearchBar","profiles","handleChange","e","profileList","map","profile","user","filter","list","undefined","console","log","name","matches","regex","RegExp","match","length","target","value","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA;AAAlB,CAAD,KAAkC;AAClDL,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;;AAIA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,WAAW,GAAGH,QAAQ,CAACI,GAAT,CAAcC,OAAD,IAAa;AAC1C,UAAIA,OAAO,CAACC,IAAR,KAAiB,IAArB,EAA2B;AACzB,eAAOD,OAAO,CAACC,IAAf;AACD;AACF,KAJiB,CAAlB;AAMAH,IAAAA,WAAW,GAAGA,WAAW,CAACI,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,KAAKC,SAAtC,CAAd;AAEAN,IAAAA,WAAW,CAACC,GAAZ,CAAiBI,IAAD,IAAUE,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB,CAA1B;;AAEA,QAAIV,CAAC,KAAK,EAAV,EAAc;AACZ;AAEA,UAAIW,OAAO,GAAGV,WAAW,CAACI,MAAZ,CAAoBF,OAAD,IAAa;AAC5C,cAAMS,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,CAAE,EAAhB,EAAmB,IAAnB,CAAd;;AACA,YAAIG,OAAO,CAACO,IAAR,CAAaI,KAAb,CAAmBF,KAAnB,CAAJ,EAA+B;AAC7B,iBAAOT,OAAP;AACD;AACF,OALa,CAAd;AAOAK,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;;AAEA,UAAIX,CAAC,CAACe,MAAF,KAAa,CAAjB,EAAoB;AAClBJ,QAAAA,OAAO,GAAG,EAAV;AACD;AACF;AACF,GA3BD;;AA6BA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAGX,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAhDD;;AAkDApB,SAAS,CAACqB,SAAV,GAAsB;AACpBpB,EAAAA,QAAQ,EAAEJ,SAAS,CAACyB,MAAV,CAAiBC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCxB,EAAAA,QAAQ,EAAEwB,KAAK,CAACnB,OAAN,CAAcL;AADU,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\n\nconst SearchBar = ({ getAllProfiles, profiles }) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n\n  const handleChange = (e) => {\n    let profileList = profiles.map((profile) => {\n      if (profile.user !== null) {\n        return profile.user;\n      }\n    });\n\n    profileList = profileList.filter((list) => list !== undefined);\n\n    profileList.map((list) => console.log(list.name));\n\n    if (e !== '') {\n      // Get matches to current text input\n\n      let matches = profileList.filter((profile) => {\n        const regex = new RegExp(`${e}`, 'gi');\n        if (profile.name.match(regex)) {\n          return profile\n        }\n      });\n\n      console.log(matches);\n\n      if (e.length === 0) {\n        matches = [];\n      }\n    }\n  };\n\n  return (\n    <div id='searchWrapper'>\n      <div class='input-icons'>\n        <i className='fas fa-search icon' />\n        <input\n          id='searchBar'\n          type='text'\n          placeholder='Search'\n          onChange={(e) => handleChange(e.target.value)}\n        />\n      </div>\n      <div id='match-list'></div>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profiles: state.profile.profiles,\n});\n\nexport default connect(mapStateToProps, { getAllProfiles })(SearchBar);\n"]},"metadata":{},"sourceType":"module"}