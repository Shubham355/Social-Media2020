{"ast":null,"code":"const jwt = require('jsonwebtoken');\n\nconst config = require('config');\n\nmodule.exports = function (req, res, next) {\n  // Get token from header\n  const token = req.header('x-auth-token'); // Check if not token\n\n  if (!token) {\n    return res.status(401).json({\n      msg: 'No token found, Authorization denied'\n    });\n  } // Verify the token\n\n\n  try {\n    const decoded = jwt.verify(token, config.get('jwtSecret'));\n    req.user = decoded.user;\n    next();\n  } catch (err) {\n    res.status(401).json({\n      msg: 'Token is not valid'\n    });\n  }\n};","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/middleware/auth.js"],"names":["jwt","require","config","module","exports","req","res","next","token","header","status","json","msg","decoded","verify","get","user","err"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACzC;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd,CAFyC,CAIzC;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFD,CAAP;AAGD,GATwC,CAWzC;;;AACA,MAAI;AACF,UAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWN,KAAX,EAAkBN,MAAM,CAACa,GAAP,CAAW,WAAX,CAAlB,CAAhB;AAEAV,IAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAO,CAACG,IAAnB;AACAT,IAAAA,IAAI;AACL,GALD,CAKE,OAAOU,GAAP,EAAY;AACZX,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB;AACD;AACF,CApBD","sourcesContent":["const jwt = require('jsonwebtoken');\nconst config = require('config');\n\nmodule.exports = function (req, res, next) {\n  // Get token from header\n  const token = req.header('x-auth-token');\n\n  // Check if not token\n  if (!token) {\n    return res\n      .status(401)\n      .json({ msg: 'No token found, Authorization denied' });\n  }\n\n  // Verify the token\n  try {\n    const decoded = jwt.verify(token, config.get('jwtSecret'));\n\n    req.user = decoded.user;\n    next();\n  } catch (err) {\n    res.status(401).json({ msg: 'Token is not valid' });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}