{"ast":null,"code":"import _regeneratorRuntime from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Link,Redirect}from'react-router-dom';import{connect}from'react-redux';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';import swal from'sweetalert';var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setformData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){return setformData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){swal({title:'Passwords do not match',icon:'error'});// setAlert('Passwords do not match', 'danger');\n}else{name=name.trim();register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();// If logged in\nif(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/dashboard\"});}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/React.createElement(\"small\",{className:\"form-text\"},\"Email Address must be unique\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",value:password2,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Sign In\"))));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","swal","Register","isAuthenticated","name","email","password","password2","formData","setformData","onChange","e","target","value","onSubmit","preventDefault","title","icon","trim","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setformData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  let { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setformData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      swal({ title: 'Passwords do not match', icon: 'error' });\n      // setAlert('Passwords do not match', 'danger');\n    } else {\n      name = name.trim();\n      register({ name, email, password });\n    }\n  };\n\n  // If logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>Email Address must be unique</small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <input type='submit' className='btn btn-primary' value='Register' />\n        </div>\n\n        <p className='my-1'>\n          Already have an account? <Link to='/login'>Sign In</Link>\n        </p>\n      </form>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}