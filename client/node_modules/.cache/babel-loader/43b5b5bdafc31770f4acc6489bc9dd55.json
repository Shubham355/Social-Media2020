{"ast":null,"code":"import{v4 as uuid}from'uuid';import{SET_ALERT,REMOVE_ALERT}from'./types';// import swal from 'sweetalert';\nexport var setAlert=function setAlert(msg,alertType){var timeout=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3000;return function(dispatch){var id=uuid();dispatch({type:SET_ALERT,payload:{msg:msg,alertType:alertType,id:id}});setTimeout(function(){return dispatch({type:REMOVE_ALERT,payload:id});},timeout);};};// export const confirmDelete = () => {\n//   swal({\n//     title: 'Are you sure?',\n//     text: 'Once deleted, you will not be able to recover this post!',\n//     icon: 'warning',\n//     buttons: true,\n//     dangerMode: true,\n//   }).then((willDelete) => {\n//     if(willDelete) {\n//       try {\n//         await axios.delete(`/api/posts/${postId}`);\n//         dispatch({\n//           type: DELETE_POST,\n//           payload: postId,\n//         });\n//         dispatch(setAlert('Post Removed', 'success'));\n//       } catch (err) {\n//         const errors = err.response.data.errors;\n//         if (errors) {\n//           errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n//         }\n//         dispatch({\n//           type: POST_ERROR,\n//           payload: { msg: err.response.statusText, status: err.response.status },\n//         });\n//       }\n//     }\n//   });\n// };\n// export const customAlert = (title, text, icon, button = 'OK') => {\n//   swal({\n//     title,\n//     text,\n//     icon,\n//     button,\n//   });\n// };","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/actions/alert.js"],"names":["v4","uuid","SET_ALERT","REMOVE_ALERT","setAlert","msg","alertType","timeout","dispatch","id","type","payload","setTimeout"],"mappings":"AAAA,OAASA,EAAE,GAAIC,CAAAA,IAAf,KAA2B,MAA3B,CACA,OAASC,SAAT,CAAoBC,YAApB,KAAwC,SAAxC,CACA;AAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,SAAN,KAAiBC,CAAAA,OAAjB,2DAA2B,IAA3B,OAAoC,UAACC,QAAD,CAAc,CACxE,GAAMC,CAAAA,EAAE,CAAGR,IAAI,EAAf,CAEAO,QAAQ,CAAC,CACPE,IAAI,CAAER,SADC,CAEPS,OAAO,CAAE,CAAEN,GAAG,CAAHA,GAAF,CAAOC,SAAS,CAATA,SAAP,CAAkBG,EAAE,CAAFA,EAAlB,CAFF,CAAD,CAAR,CAKAG,UAAU,CAAC,iBAAMJ,CAAAA,QAAQ,CAAC,CAAEE,IAAI,CAAEP,YAAR,CAAsBQ,OAAO,CAAEF,EAA/B,CAAD,CAAd,EAAD,CAAsDF,OAAtD,CAAV,CACD,CATuB,EAAjB,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n// import swal from 'sweetalert';\n\nexport const setAlert = (msg, alertType, timeout = 3000) => (dispatch) => {\n  const id = uuid();\n\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n\n// export const confirmDelete = () => {\n//   swal({\n//     title: 'Are you sure?',\n//     text: 'Once deleted, you will not be able to recover this post!',\n//     icon: 'warning',\n//     buttons: true,\n//     dangerMode: true,\n//   }).then((willDelete) => {\n//     if(willDelete) {\n//       try {\n//         await axios.delete(`/api/posts/${postId}`);\n\n//         dispatch({\n//           type: DELETE_POST,\n//           payload: postId,\n//         });\n\n//         dispatch(setAlert('Post Removed', 'success'));\n//       } catch (err) {\n//         const errors = err.response.data.errors;\n\n//         if (errors) {\n//           errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n//         }\n\n//         dispatch({\n//           type: POST_ERROR,\n//           payload: { msg: err.response.statusText, status: err.response.status },\n//         });\n//       }\n//     }\n//   });\n// };\n\n// export const customAlert = (title, text, icon, button = 'OK') => {\n//   swal({\n//     title,\n//     text,\n//     icon,\n//     button,\n//   });\n// };\n"]},"metadata":{},"sourceType":"module"}