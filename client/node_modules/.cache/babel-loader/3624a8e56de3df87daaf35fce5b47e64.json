{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst SearchBar = ({\n  profiles\n}) => {\n  const [word, setWord] = useState('');\n  const [filterDisplay, setFilterDisplay] = useState(profiles);\n\n  const handleChange = e => {\n    let oldLiist = profiles.map(profile => {\n      if (profile.user !== null) {\n        return {\n          name: profile.user.name,\n          avatar: profile.user.avatar\n        };\n      }\n    });\n\n    if (e !== '') {\n      console.log(oldLiist);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"searchBar\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"match-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profile.profiles\n});\n\nexport default connect(mapStateToProps)(SearchBar);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/index.js"],"names":["React","useState","PropTypes","connect","SearchBar","profiles","word","setWord","filterDisplay","setFilterDisplay","handleChange","e","oldLiist","map","profile","user","name","avatar","console","log","target","value","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAACI,QAAD,CAAlD;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,QAAQ,GAAGP,QAAQ,CAACQ,GAAT,CAAcC,OAAD,IAAa;AACvC,UAAIA,OAAO,CAACC,IAAR,KAAiB,IAArB,EAA2B;AACzB,eAAO;AAAEC,UAAAA,IAAI,EAAEF,OAAO,CAACC,IAAR,CAAaC,IAArB;AAA2BC,UAAAA,MAAM,EAAEH,OAAO,CAACC,IAAR,CAAaE;AAAhD,SAAP;AACD;AACF,KAJc,CAAf;;AAMA,QAAIN,CAAC,KAAK,EAAV,EAAc;AACZO,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAGD,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACS,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CA/BD;;AAiCAjB,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,MAAV,CAAiBC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCrB,EAAAA,QAAQ,EAAEqB,KAAK,CAACZ,OAAN,CAAcT;AADU,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACsB,eAAD,CAAP,CAAyBrB,SAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst SearchBar = ({ profiles }) => {\n  const [word, setWord] = useState('');\n\n  const [filterDisplay, setFilterDisplay] = useState(profiles);\n\n  const handleChange = (e) => {\n    let oldLiist = profiles.map((profile) => {\n      if (profile.user !== null) {\n        return { name: profile.user.name, avatar: profile.user.avatar };\n      }\n    });\n\n    if (e !== '') {\n      console.log(oldLiist);\n    }\n  };\n\n  return (\n    <div id='searchWrapper'>\n      <div class='input-icons'>\n        <i className='fas fa-search icon' />\n        <input\n          id='searchBar'\n          type='text'\n          placeholder='Search'\n          onChange={(e) => handleChange(e.target.value)}\n        />\n      </div>\n      <div id='match-list'></div>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profiles: state.profile.profiles,\n});\n\nexport default connect(mapStateToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}