{"ast":null,"code":"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  clearProfile,\n  getProfileByID,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    clearProfile();\n    getProfileByID(match.params.user_id);\n    scrollToTop();\n  }, [getProfileByID, match]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  return; //   return loading && profile === null ? (\n  //     <Spinner />\n  //   ) : profile !== null ? (\n  //     <Fragment>\n  //       <Link to='/dashboard' className='btn btn-light my-1'>\n  //         Go Back\n  //       </Link>\n  //       <ProfileData profile={profile} />\n  //     </Fragment>\n  //   ) : (\n  //     <Fragment>\n  //       <ProfileNotFound />\n  //     </Fragment>\n  //   );\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByID,\n  clearProfile\n})(IndividualProfile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getProfileByID","clearProfile","Link","ProfileData","Spinner","ProfileNotFound","IndividualProfile","match","profile","loading","params","user_id","scrollToTop","window","scrollTo","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,uBAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,KADyB;AAEzBN,EAAAA,YAFyB;AAGzBD,EAAAA,cAHyB;AAIzBQ,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAJgB,CAAD,KAKpB;AACJb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACZD,IAAAA,cAAc,CAACO,KAAK,CAACG,MAAN,CAAaC,OAAd,CAAd;AACAC,IAAAA,WAAW;AACZ,GAJQ,EAIN,CAACZ,cAAD,EAAiBO,KAAjB,CAJM,CAAT;;AAMA,WAASK,WAAT,GAAuB;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAED,SAXI,CAaJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjCD;;AAmCAR,iBAAiB,CAACS,SAAlB,GAA8B;AAC5BP,EAAAA,OAAO,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADE;AAE5BjB,EAAAA,cAAc,EAAEF,SAAS,CAACoB,IAAV,CAAeD,UAFH;AAG5BhB,EAAAA,YAAY,EAAEH,SAAS,CAACoB,IAAV,CAAeD;AAHD,CAA9B;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ;AADmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CACbK,iBADa,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  clearProfile,\n  getProfileByID,\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    clearProfile();\n    getProfileByID(match.params.user_id);\n    scrollToTop();\n  }, [getProfileByID, match]);\n\n  function scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  return \n\n  //   return loading && profile === null ? (\n  //     <Spinner />\n  //   ) : profile !== null ? (\n  //     <Fragment>\n  //       <Link to='/dashboard' className='btn btn-light my-1'>\n  //         Go Back\n  //       </Link>\n\n  //       <ProfileData profile={profile} />\n  //     </Fragment>\n  //   ) : (\n  //     <Fragment>\n  //       <ProfileNotFound />\n  //     </Fragment>\n  //   );\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfileByID, clearProfile })(\n  IndividualProfile\n);\n"]},"metadata":{},"sourceType":"module"}