{"ast":null,"code":"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return;\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","Spinner","getPosts","connect","Posts","post","posts","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AACxDR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA;AACD,CAND;;AAQAE,KAAK,CAACI,SAAN,GAAkB;AAChBN,EAAAA,QAAQ,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADT;AAEhBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACS,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return ;\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}