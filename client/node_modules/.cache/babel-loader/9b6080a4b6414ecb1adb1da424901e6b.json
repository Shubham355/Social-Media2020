{"ast":null,"code":"import _slicedToArray from\"/home/shubham/Desktop/Socialmedia_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import Avatar from'react-avatar-edit';import{Modal,ModalHeader,ModalBody}from'reactstrap';import Profile_Picture from'./Profile_Picture';// import 'bootstrap/dist/css/bootstrap.min.css';\nvar SetProfileImage=function SetProfileImage(_ref){var user_id=_ref.user_id;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggleDisplay=_useState2[0],setToggleDisplay=_useState2[1];return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"edit-btn\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){setToggleDisplay(!toggleDisplay);}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-pencil-square-o\"}))),/*#__PURE__*/React.createElement(Modal,{isOpen:toggleDisplay,toggle:function toggle(){setToggleDisplay(!toggleDisplay);}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){setToggleDisplay(!toggleDisplay);}}),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"span\",{className:\"lead\"},\"Change Profile Image\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(Profile_Picture,{setToggleDisplay:setToggleDisplay,toggleDisplay:toggleDisplay,user_id:user_id})))))));};export default SetProfileImage;","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile_image/setProfileImage.js"],"names":["React","Fragment","useState","Avatar","Modal","ModalHeader","ModalBody","Profile_Picture","SetProfileImage","user_id","toggleDisplay","setToggleDisplay","e"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,CAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,YAA9C,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,eACGP,QAAQ,CAAC,KAAD,CADX,wCAChCQ,aADgC,eACjBC,gBADiB,eAGvC,mBACE,oBAAC,QAAD,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,8BACE,OAAO,CAAE,iBAACC,CAAD,CAAO,CACdD,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAHH,eAKE,yBAAG,KAAK,CAAC,uBAAT,EALF,CADF,CADF,cAWE,oBAAC,KAAD,EACE,MAAM,CAAEA,aADV,CAEE,MAAM,CAAE,iBAAM,CACZC,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAJH,eAME,oBAAC,WAAD,EACE,MAAM,CAAE,iBAAM,CACZC,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAHH,EANF,cAWE,oBAAC,SAAD,mBACE,4BAAM,SAAS,CAAC,MAAhB,yBADF,cAEE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,eAAD,EACE,gBAAgB,CAAEC,gBADpB,CAEE,aAAa,CAAED,aAFjB,CAGE,OAAO,CAAED,OAHX,EADF,CADF,CADF,CAFF,CAXF,CAXF,CADF,CAwCD,CA3CD,CAiDA,cAAeD,CAAAA,eAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar-edit';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport Profile_Picture from './Profile_Picture';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SetProfileImage = ({ user_id }) => {\n  const [toggleDisplay, setToggleDisplay] = useState(false);\n\n  return (\n    <Fragment>\n      <div className='edit-btn'>\n        <button\n          onClick={(e) => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n        >\n          <i class='fa fa-pencil-square-o'></i>\n        </button>\n      </div>\n\n      <Modal\n        isOpen={toggleDisplay}\n        toggle={() => {\n          setToggleDisplay(!toggleDisplay);\n        }}\n      >\n        <ModalHeader\n          toggle={() => {\n            setToggleDisplay(!toggleDisplay);\n          }}\n        ></ModalHeader>\n        <ModalBody>\n          <span className='lead'>Change Profile Image</span>\n          <div className='container-fluid'>\n            <div className='row'>\n              <div className='col-12'>\n                <Profile_Picture\n                  setToggleDisplay={setToggleDisplay}\n                  toggleDisplay={toggleDisplay}\n                  user_id={user_id}\n                />\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  );\n};\n\nSetProfileImage.propTypes = {\n  user_id: PropTypes.string.isRequired,\n};\n\nexport default SetProfileImage;\n"]},"metadata":{},"sourceType":"module"}