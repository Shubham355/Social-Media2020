{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{connect}from'react-redux';import{getPost}from'../../actions/post';import PostItem from'./PostItem';import Spinner from'../layout/Spinner';import{Link,withRouter}from'react-router-dom';import CommentForm from'./CommentForm';import CommentItem from'./CommentItem';var SinglePost=function SinglePost(_ref){var getPost=_ref.getPost,match=_ref.match,_ref$post=_ref.post,post=_ref$post.post,loading=_ref$post.loading,history=_ref.history;useEffect(function(){getPost(match.params.post_id);},[getPost,match]);return loading||post===null?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){history.goBack();},className:\"btn\"},\"Go Back\"),/*#__PURE__*/React.createElement(PostItem,{post:post,showActions:false}),/*#__PURE__*/React.createElement(CommentForm,{postId:post._id}),/*#__PURE__*/React.createElement(\"div\",{className:\"comments\"},post.comments.map(function(comment){return/*#__PURE__*/React.createElement(CommentItem,{key:comment._id,comment:comment,postId:post._id});})));};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPost:getPost})(withRouter(SinglePost));","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/SinglePost.js"],"names":["React","useEffect","Fragment","connect","getPost","PostItem","Spinner","Link","withRouter","CommentForm","CommentItem","SinglePost","match","post","loading","history","params","post_id","goBack","_id","comments","map","comment","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA0D,IAAvDP,CAAAA,OAAuD,MAAvDA,OAAuD,CAA9CQ,KAA8C,MAA9CA,KAA8C,gBAAvCC,IAAuC,CAA/BA,IAA+B,WAA/BA,IAA+B,CAAzBC,OAAyB,WAAzBA,OAAyB,CAAdC,OAAc,MAAdA,OAAc,CAC3Ed,SAAS,CAAC,UAAM,CACdG,OAAO,CAACQ,KAAK,CAACI,MAAN,CAAaC,OAAd,CAAP,CACD,CAFQ,CAEN,CAACb,OAAD,CAAUQ,KAAV,CAFM,CAAT,CAIA,MAAOE,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cACL,oBAAC,OAAD,MADK,cAGL,oBAAC,QAAD,mBACE,oBAAC,IAAD,EACE,OAAO,CAAE,kBAAM,CACbE,OAAO,CAACG,MAAR,GACD,CAHH,CAIE,SAAS,CAAC,KAJZ,YADF,cASE,oBAAC,QAAD,EAAU,IAAI,CAAEL,IAAhB,CAAsB,WAAW,CAAE,KAAnC,EATF,cAUE,oBAAC,WAAD,EAAa,MAAM,CAAEA,IAAI,CAACM,GAA1B,EAVF,cAYE,2BAAK,SAAS,CAAC,UAAf,EACGN,IAAI,CAACO,QAAL,CAAcC,GAAd,CAAkB,SAACC,OAAD,qBACjB,oBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACH,GAA1B,CAA+B,OAAO,CAAEG,OAAxC,CAAiD,MAAM,CAAET,IAAI,CAACM,GAA9D,EADiB,EAAlB,CADH,CAZF,CAHF,CAsBD,CA3BD,CAkCA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCX,IAAI,CAAEW,KAAK,CAACX,IADsB,CAAZ,EAAxB,CAIA,cAAeV,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAAEnB,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCI,UAAU,CAACG,UAAD,CAAhD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport PostItem from './PostItem';\nimport Spinner from '../layout/Spinner';\nimport { Link, withRouter } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst SinglePost = ({ getPost, match, post: { post, loading }, history }) => {\n  useEffect(() => {\n    getPost(match.params.post_id);\n  }, [getPost, match]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link\n        onClick={() => {\n          history.goBack();\n        }}\n        className='btn'\n      >\n        Go Back\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nSinglePost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(withRouter(SinglePost));\n"]},"metadata":{},"sourceType":"module"}