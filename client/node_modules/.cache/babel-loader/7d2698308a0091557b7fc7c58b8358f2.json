{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/SearchBar.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport { getProfileByID } from '../../actions/profile';\n\nconst SearchBar = ({\n  getProfileByID,\n  getAllProfiles,\n  profiles\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  let html = '';\n\n  const handleChange = e => {\n    let profileList = profiles.map(profile => {\n      if (profile.user !== null) {\n        return profile.user;\n      }\n    });\n    profileList = profileList.filter(list => list !== undefined);\n    let matches = []; // profileList.map((list) => console.log(list.name));\n\n    if (e !== '') {\n      // Get matches to current text input\n      matches = profileList.filter(profile => {\n        const regex = new RegExp(`${e}`, 'gi');\n\n        if (profile.name.match(regex)) {\n          return profile;\n        }\n      }); // console.log(matches);\n\n      if (e.length === 0) {\n        matches = [];\n      }\n\n      display_result(matches);\n    }\n  };\n\n  const display_result = matches => {\n    if (matches.length > 0) {\n      console.log(matches);\n      html = matches.map(match => `<div> \n      <Link to=${getProfileByID(match._id)}>\n        <img src=${match.avatar} /> <span>${match.name}</span>\n      </Link>\n        </div>`).join('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"searchBar\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"match-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, html));\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profile.profiles\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles,\n  getProfileByID\n})(SearchBar);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/searchbar/SearchBar.js"],"names":["React","useEffect","PropTypes","connect","getAllProfiles","Link","getProfileByID","SearchBar","profiles","html","handleChange","e","profileList","map","profile","user","filter","list","undefined","matches","regex","RegExp","name","match","length","display_result","console","log","_id","avatar","join","target","value","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport { getProfileByID } from '../../actions/profile';\n\n\nconst SearchBar = ({ getProfileByID, getAllProfiles, profiles }) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n\n  let html = '';\n\n  const handleChange = (e) => {\n    let profileList = profiles.map((profile) => {\n      if (profile.user !== null) {\n        return profile.user;\n      }\n    });\n\n    profileList = profileList.filter((list) => list !== undefined);\n\n    let matches = [];\n\n    // profileList.map((list) => console.log(list.name));\n\n    if (e !== '') {\n      // Get matches to current text input\n\n      matches = profileList.filter((profile) => {\n        const regex = new RegExp(`${e}`, 'gi');\n        if (profile.name.match(regex)) {\n          return profile;\n        }\n      });\n\n      // console.log(matches);\n\n      if (e.length === 0) {\n        matches = [];\n      }\n\n      display_result(matches);\n    }\n  };\n\n  const display_result = (matches) => {\n    if (matches.length > 0) {\n      console.log(matches);\n      html = matches\n        .map(\n          (match) => `<div> \n      <Link to=${getProfileByID(match._id)}>\n        <img src=${match.avatar} /> <span>${match.name}</span>\n      </Link>\n        </div>`\n        )\n        .join('');\n    }\n  };\n\n  return (\n    <div id='searchWrapper'>\n      <div class='input-icons'>\n        <i className='fas fa-search icon' />\n        <input\n          id='searchBar'\n          type='text'\n          placeholder='Search'\n          onChange={(e) => handleChange(e.target.value)}\n        />\n      </div>\n      <div id='match-list'>{html}</div>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  profiles: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profiles: state.profile.profiles,\n});\n\nexport default connect(mapStateToProps, { getAllProfiles, getProfileByID })(\n  SearchBar\n);\n"]},"metadata":{},"sourceType":"module"}