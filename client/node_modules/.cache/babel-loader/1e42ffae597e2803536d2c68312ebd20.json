{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  getProfileByID,\n  profile: {\n    profile,\n    loading,\n    error\n  },\n  clearProfile\n}) => {\n  [profile, setProfile] = useState(null)[(loading, setLoading)] = useState(false)[(error, setError)] = useState(null); // useEffect(() => {\n  //   clearProfile();\n  //   getProfileByID(match.params.user_id);\n  //   scrollToTop();\n  // }, [getProfileByID, match]);\n  // function scrollToTop() {\n  //   window.scrollTo(0, 0);\n  // }\n\n  getProfileByID = userID => async dispatch => {\n    try {\n      const res = await axios.get(`/api/profile/user/${userID}`);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      }); // dispatch({ type: CLEAR_PROFILE });\n    }\n  };\n\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }) : profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"btn btn-light my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(ProfileData, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileNotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByID,\n  clearProfile\n})(IndividualProfile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getProfileByID","clearProfile","Link","ProfileData","Spinner","ProfileNotFound","IndividualProfile","match","profile","loading","error","setProfile","useState","setLoading","setError","userID","dispatch","res","axios","get","type","GET_PROFILE","payload","data","err","PROFILE_ERROR","msg","response","statusText","status","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\n\nconst IndividualProfile = ({\n  match,\n  getProfileByID,\n  profile: { profile, loading, error },\n  clearProfile,\n}) => {\n  [profile, setProfile] = useState(null)\n  [loading, setLoading] = useState(false)\n  [error, setError] = useState(null)\n  // useEffect(() => {\n  //   clearProfile();\n  //   getProfileByID(match.params.user_id);\n  //   scrollToTop();\n  // }, [getProfileByID, match]);\n\n  // function scrollToTop() {\n  //   window.scrollTo(0, 0);\n  // }\n\n  getProfileByID = (userID) => async (dispatch) => {\n    try {\n      const res = await axios.get(`/api/profile/user/${userID}`);\n  \n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n  \n      // dispatch({ type: CLEAR_PROFILE });\n    }\n  };\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : profile !== null ? (\n    <Fragment>\n      <Link to='/dashboard' className='btn btn-light my-1'>\n        Go Back\n      </Link>\n\n      <ProfileData profile={profile} />\n    </Fragment>\n  ) : (\n    <Fragment>\n      <ProfileNotFound />\n    </Fragment>\n  );\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfileByID, clearProfile })(\n  IndividualProfile\n);\n"]},"metadata":{},"sourceType":"module"}