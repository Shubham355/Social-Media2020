{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\nimport swal from 'sweetalert';\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\n  const id = uuid();\n  dispatch({\n    type: SET_ALERT,\n    payload: {\n      msg,\n      alertType,\n      id\n    }\n  });\n  setTimeout(() => dispatch({\n    type: REMOVE_ALERT,\n    payload: id\n  }), timeout);\n}; // export const confirmDelete = () => {\n//   swal({\n//     title: 'Are you sure?',\n//     text: 'Once deleted, you will not be able to recover this post!',\n//     icon: 'warning',\n//     buttons: true,\n//     dangerMode: true,\n//   }).then((willDelete) => {\n//     if(willDelete) {\n//       try {\n//         await axios.delete(`/api/posts/${postId}`);\n//         dispatch({\n//           type: DELETE_POST,\n//           payload: postId,\n//         });\n//         dispatch(setAlert('Post Removed', 'success'));\n//       } catch (err) {\n//         const errors = err.response.data.errors;\n//         if (errors) {\n//           errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n//         }\n//         dispatch({\n//           type: POST_ERROR,\n//           payload: { msg: err.response.statusText, status: err.response.status },\n//         });\n//       }\n//     }\n//   });\n// };\n\nexport const customAlert = (title, text, icon, button = 'OK') => {\n  swal({\n    title,\n    text,\n    icon,\n    button\n  });\n};","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/actions/alert.js"],"names":["v4","uuid","SET_ALERT","REMOVE_ALERT","swal","setAlert","msg","alertType","timeout","dispatch","id","type","payload","setTimeout","customAlert","title","text","icon","button"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,SAAxC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,SAAN,EAAiBC,OAAO,GAAG,IAA3B,KAAqCC,QAAD,IAAc;AACxE,QAAMC,EAAE,GAAGT,IAAI,EAAf;AAEAQ,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAET,SADC;AAEPU,IAAAA,OAAO,EAAE;AAAEN,MAAAA,GAAF;AAAOC,MAAAA,SAAP;AAAkBG,MAAAA;AAAlB;AAFF,GAAD,CAAR;AAKAG,EAAAA,UAAU,CAAC,MAAMJ,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER,YAAR;AAAsBS,IAAAA,OAAO,EAAEF;AAA/B,GAAD,CAAf,EAAsDF,OAAtD,CAAV;AACD,CATM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAAM,GAAG,IAA7B,KAAsC;AAC/Dd,EAAAA,IAAI,CAAC;AACHW,IAAAA,KADG;AAEHC,IAAAA,IAFG;AAGHC,IAAAA,IAHG;AAIHC,IAAAA;AAJG,GAAD,CAAJ;AAMD,CAPM","sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\nimport swal from 'sweetalert';\n\nexport const setAlert = (msg, alertType, timeout = 3000) => (dispatch) => {\n  const id = uuid();\n\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n\n// export const confirmDelete = () => {\n//   swal({\n//     title: 'Are you sure?',\n//     text: 'Once deleted, you will not be able to recover this post!',\n//     icon: 'warning',\n//     buttons: true,\n//     dangerMode: true,\n//   }).then((willDelete) => {\n//     if(willDelete) {\n//       try {\n//         await axios.delete(`/api/posts/${postId}`);\n\n//         dispatch({\n//           type: DELETE_POST,\n//           payload: postId,\n//         });\n\n//         dispatch(setAlert('Post Removed', 'success'));\n//       } catch (err) {\n//         const errors = err.response.data.errors;\n\n//         if (errors) {\n//           errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n//         }\n\n//         dispatch({\n//           type: POST_ERROR,\n//           payload: { msg: err.response.statusText, status: err.response.status },\n//         });\n//       }\n//     }\n//   });\n// };\n\nexport const customAlert = (title, text, icon, button = 'OK') => {\n  swal({\n    title,\n    text,\n    icon,\n    button,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}