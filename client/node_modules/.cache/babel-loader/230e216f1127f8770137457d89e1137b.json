{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { addLike, dislike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  dislike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    dislikes,\n    comments,\n    date\n  },\n  showActions\n}) => re( /*#__PURE__*/React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `/profile/${user}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 19\n  }\n}, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }\n}, likes.filter(like => like.user === auth.user._id).length > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 15\n  }\n}) : /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fa fa-thumbs-o-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 15\n  }\n}), ' ', likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 34\n  }\n}, likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => dislike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }\n}, dislikes.filter(dislike => dislike.user === auth.user._id).length > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 15\n  }\n}) : /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fa fa-thumbs-o-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 15\n  }\n}), ' ', dislikes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 37\n  }\n}, dislikes.length)), /*#__PURE__*/React.createElement(Link, {\n  to: `/posts/${_id}`,\n  className: \"btn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fa fa-comment-o\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }\n}), ' ', comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 37\n  }\n}, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 15\n  }\n}))))));\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  dislike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  dislike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","connect","Moment","addLike","dislike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","dislikes","comments","date","showActions","re","e","filter","like","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { addLike, dislike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  dislike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, dislikes, comments, date },\n  showActions,\n}) => \n\nre(\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={(e) => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            {likes.filter((like) => like.user === auth.user._id).length > 0 ? (\n              <i className='fas fa-thumbs-up' />\n            ) : (\n              <i className='fa fa-thumbs-o-up'></i>\n            )}{' '}\n            {likes.length > 0 && <span>{likes.length}</span>}\n          </button>\n          <button\n            onClick={(e) => dislike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            {dislikes.filter((dislike) => dislike.user === auth.user._id).length > 0 ? (\n              <i className='fas fa-thumbs-down' />\n            ) : (\n              <i className='fa fa-thumbs-o-down'></i>\n            )}{' '}\n            {dislikes.length > 0 && <span>{dislikes.length}</span>}\n          </button>\n          <Link to={`/posts/${_id}`} className='btn'>\n            <i className='fa fa-comment-o'></i>{' '}\n            {comments.length > 0 && <span>{comments.length}</span>}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times'></i>\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  dislike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, dislike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}