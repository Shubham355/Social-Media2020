{"ast":null,"code":"import React,{Fragment}from'react';import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';import ProfilePost from'./ProfilePost';import{connect}from'react-redux';import{deleteAccount}from'../../actions/profile';import swal from'sweetalert';var ProfileData=function ProfileData(_ref){var profile=_ref.profile,posts=_ref.posts,user=_ref.auth.user,deleteAccount=_ref.deleteAccount;var customDelete=function customDelete(){swal({title:'Are you sure?',text:'Once deleted, you will not be able to recover your account!',icon:'warning',buttons:true,dangerMode:true}).then(function(willDelete){if(willDelete){deleteAccount();}});};return/*#__PURE__*/React.createElement(\"div\",{className:\"profile-gird my-1\"},/*#__PURE__*/React.createElement(ProfileTop,{profile:profile}),/*#__PURE__*/React.createElement(ProfileAbout,{profile:profile}),/*#__PURE__*/React.createElement(\"div\",{className:\"profile-exp bg-white p-2\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},\"Experience\"),profile.experience.length>0?/*#__PURE__*/React.createElement(Fragment,null,profile.experience.map(function(experience){return/*#__PURE__*/React.createElement(ProfileExperience,{key:experience._id,experience:experience});})):/*#__PURE__*/React.createElement(\"h4\",null,\"No Experience Credentials\")),/*#__PURE__*/React.createElement(\"div\",{className:\"profile-edu bg-white p-2\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},\"Education\"),profile.education.length>0?/*#__PURE__*/React.createElement(Fragment,null,profile.education.map(function(education){return/*#__PURE__*/React.createElement(ProfileEducation,{key:education._id,education:education});})):/*#__PURE__*/React.createElement(\"h4\",null,\"No Education Credentials\")),profile.githubusername&&/*#__PURE__*/React.createElement(ProfileGithub,{username:profile.githubusername}),posts.length>0?/*#__PURE__*/React.createElement(ProfilePost,{posts:posts}):/*#__PURE__*/React.createElement(\"div\",{className:\"profile-edu bg-white p-2\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},\"Posts\"),/*#__PURE__*/React.createElement(\"h4\",null,\"No Post Found\")),user._id===profile.user._id&&/*#__PURE__*/React.createElement(\"div\",{className:\"my-2\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return customDelete();},className:\"btn btn-danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user-minus\"},\" Delete My Account\"))));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{deleteAccount:deleteAccount})(ProfileData);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/ProfileData.js"],"names":["React","Fragment","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","ProfilePost","connect","deleteAccount","swal","ProfileData","profile","posts","user","auth","customDelete","title","text","icon","buttons","dangerMode","then","willDelete","experience","length","map","_id","education","githubusername","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAuD,IAApDC,CAAAA,OAAoD,MAApDA,OAAoD,CAA3CC,KAA2C,MAA3CA,KAA2C,CAA5BC,IAA4B,MAApCC,IAAoC,CAA5BD,IAA4B,CAApBL,aAAoB,MAApBA,aAAoB,CACzE,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBN,IAAI,CAAC,CACHO,KAAK,CAAE,eADJ,CAEHC,IAAI,CAAE,6DAFH,CAGHC,IAAI,CAAE,SAHH,CAIHC,OAAO,CAAE,IAJN,CAKHC,UAAU,CAAE,IALT,CAAD,CAAJ,CAMGC,IANH,CAMQ,SAACC,UAAD,CAAgB,CACtB,GAAIA,UAAJ,CAAgB,CACdd,aAAa,GACd,CACF,CAVD,EAWD,CAZD,CAcA,mBACE,2BAAK,SAAS,CAAC,mBAAf,eACE,oBAAC,UAAD,EAAY,OAAO,CAAEG,OAArB,EADF,cAEE,oBAAC,YAAD,EAAc,OAAO,CAAEA,OAAvB,EAFF,cAIE,2BAAK,SAAS,CAAC,0BAAf,eACE,0BAAI,SAAS,CAAC,cAAd,eADF,CAEGA,OAAO,CAACY,UAAR,CAAmBC,MAAnB,CAA4B,CAA5B,cACC,oBAAC,QAAD,MACGb,OAAO,CAACY,UAAR,CAAmBE,GAAnB,CAAuB,SAACF,UAAD,qBACtB,oBAAC,iBAAD,EAAmB,GAAG,CAAEA,UAAU,CAACG,GAAnC,CAAwC,UAAU,CAAEH,UAApD,EADsB,EAAvB,CADH,CADD,cAOC,0DATJ,CAJF,cAiBE,2BAAK,SAAS,CAAC,0BAAf,eACE,0BAAI,SAAS,CAAC,cAAd,cADF,CAEGZ,OAAO,CAACgB,SAAR,CAAkBH,MAAlB,CAA2B,CAA3B,cACC,oBAAC,QAAD,MACGb,OAAO,CAACgB,SAAR,CAAkBF,GAAlB,CAAsB,SAACE,SAAD,qBACrB,oBAAC,gBAAD,EAAkB,GAAG,CAAEA,SAAS,CAACD,GAAjC,CAAsC,SAAS,CAAEC,SAAjD,EADqB,EAAtB,CADH,CADD,cAOC,yDATJ,CAjBF,CA8BGhB,OAAO,CAACiB,cAAR,eACC,oBAAC,aAAD,EAAe,QAAQ,CAAEjB,OAAO,CAACiB,cAAjC,EA/BJ,CAqCGhB,KAAK,CAACY,MAAN,CAAe,CAAf,cACC,oBAAC,WAAD,EAAa,KAAK,CAAEZ,KAApB,EADD,cAGC,2BAAK,SAAS,CAAC,0BAAf,eACE,0BAAI,SAAS,CAAC,cAAd,UADF,cAEE,8CAFF,CAxCJ,CA8CGC,IAAI,CAACa,GAAL,GAAaf,OAAO,CAACE,IAAR,CAAaa,GAA1B,eACC,2BAAK,SAAS,CAAC,MAAf,eACE,8BAAQ,OAAO,CAAE,yBAAMX,CAAAA,YAAY,EAAlB,EAAjB,CAAuC,SAAS,CAAC,gBAAjD,eACE,yBAAG,SAAS,CAAC,mBAAb,uBADF,CADF,CA/CJ,CADF,CAwDD,CAvED,CA+EA,GAAMc,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClChB,IAAI,CAAEgB,KAAK,CAAChB,IADsB,CAAZ,EAAxB,CAIA,cAAeP,CAAAA,OAAO,CAACsB,eAAD,CAAkB,CAAErB,aAAa,CAAbA,aAAF,CAAlB,CAAP,CAA4CE,WAA5C,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport ProfilePost from './ProfilePost';\nimport { connect } from 'react-redux';\nimport { deleteAccount } from '../../actions/profile';\nimport swal from 'sweetalert';\n\nconst ProfileData = ({ profile, posts, auth: { user }, deleteAccount }) => {\n  const customDelete = () => {\n    swal({\n      title: 'Are you sure?',\n      text: 'Once deleted, you will not be able to recover your account!',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteAccount();\n      }\n    });\n  };\n\n  return (\n    <div className='profile-gird my-1'>\n      <ProfileTop profile={profile} />\n      <ProfileAbout profile={profile} />\n\n      <div className='profile-exp bg-white p-2'>\n        <h2 className='text-primary'>Experience</h2>\n        {profile.experience.length > 0 ? (\n          <Fragment>\n            {profile.experience.map((experience) => (\n              <ProfileExperience key={experience._id} experience={experience} />\n            ))}\n          </Fragment>\n        ) : (\n          <h4>No Experience Credentials</h4>\n        )}\n      </div>\n\n      <div className='profile-edu bg-white p-2'>\n        <h2 className='text-primary'>Education</h2>\n        {profile.education.length > 0 ? (\n          <Fragment>\n            {profile.education.map((education) => (\n              <ProfileEducation key={education._id} education={education} />\n            ))}\n          </Fragment>\n        ) : (\n          <h4>No Education Credentials</h4>\n        )}\n      </div>\n\n      {profile.githubusername && (\n        <ProfileGithub username={profile.githubusername} />\n      )}\n\n      {/* {profile.githubusername && <ProfilePost />} */}\n      {/* <ProfilePost posts={posts} /> */}\n\n      {posts.length > 0 ? (\n        <ProfilePost posts={posts} />\n      ) : (\n        <div className='profile-edu bg-white p-2'>\n          <h2 className='text-primary'>Posts</h2>\n          <h4>No Post Found</h4>\n        </div>\n      )}\n\n      {user._id === profile.user._id && (\n        <div className='my-2'>\n          <button onClick={() => customDelete()} className='btn btn-danger'>\n            <i className='fas fa-user-minus'> Delete My Account</i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nProfileData.propTypes = {\n  profile: PropTypes.object.isRequired,\n  posts: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteAccount })(ProfileData);\n"]},"metadata":{},"sourceType":"module"}