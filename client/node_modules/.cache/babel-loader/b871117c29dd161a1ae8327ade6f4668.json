{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\nimport axios from 'axios';\n\nconst IndividualProfile = () => {\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // useEffect(() => {\n  //   clearProfile();\n  //   getProfileByID(match.params.user_id);\n  //   scrollToTop();\n  // }, [getProfileByID, match]);\n  // function scrollToTop() {\n  //   window.scrollTo(0, 0);\n  // }\n\n  useEffect(() => {\n    getProfileByID(match.params.user_id);\n  }, [getProfileByID, match]);\n\n  const getProfile = async userID => {\n    try {\n      const res = await axios.get(`/api/profile/user/${userID}`);\n      setLoading(false);\n      setProfile(res.data);\n    } catch (err) {\n      console.log(err);\n      setError(err);\n      setLoading(false);\n    }\n  };\n\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }) : profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"btn btn-light my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(ProfileData, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileNotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByID,\n  clearProfile\n})(IndividualProfile);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/IndividualProfile.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","getProfileByID","clearProfile","Link","ProfileData","Spinner","ProfileNotFound","axios","IndividualProfile","profile","setProfile","loading","setLoading","error","setError","match","params","user_id","getProfile","userID","res","get","data","err","console","log","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,uBAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC,CAH8B,CAI9B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACc,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAd;AACD,GAFQ,EAEN,CAAChB,cAAD,EAAiBc,KAAjB,CAFM,CAAT;;AAIA,QAAMG,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,qBAAoBF,MAAO,EAAtC,CAAlB;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,UAAU,CAACU,GAAG,CAACE,IAAL,CAAV;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAVD;;AAYA,SAAOD,OAAO,IAAIF,OAAO,KAAK,IAAvB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAEHA,OAAO,KAAK,IAAZ,gBACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAsB,IAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADE,gBASF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF;AAeD,CA7CD;;AA+CAD,iBAAiB,CAACkB,SAAlB,GAA8B;AAC5BjB,EAAAA,OAAO,EAAEV,SAAS,CAAC4B,MAAV,CAAiBC,UADE;AAE5B3B,EAAAA,cAAc,EAAEF,SAAS,CAAC8B,IAAV,CAAeD,UAFH;AAG5B1B,EAAAA,YAAY,EAAEH,SAAS,CAAC8B,IAAV,CAAeD;AAHD,CAA9B;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,OAAO,EAAEsB,KAAK,CAACtB;AADmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CACbM,iBADa,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileByID, clearProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileData from './ProfileData';\nimport Spinner from '../layout/Spinner';\nimport ProfileNotFound from './ProfileNotFound';\nimport axios from 'axios';\n\nconst IndividualProfile = () => {\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  // useEffect(() => {\n  //   clearProfile();\n  //   getProfileByID(match.params.user_id);\n  //   scrollToTop();\n  // }, [getProfileByID, match]);\n\n  // function scrollToTop() {\n  //   window.scrollTo(0, 0);\n  // }\n\n  useEffect(() => {\n    getProfileByID(match.params.user_id);\n  }, [getProfileByID, match]);\n\n  const getProfile = async (userID) => {\n    try {\n      const res = await axios.get(`/api/profile/user/${userID}`);\n      setLoading(false);\n      setProfile(res.data);\n    } catch (err) {\n      console.log(err);\n      setError(err);\n      setLoading(false);\n    }\n  };\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : profile !== null ? (\n    <Fragment>\n      <Link to='/dashboard' className='btn btn-light my-1'>\n        Go Back\n      </Link>\n\n      <ProfileData profile={profile} />\n    </Fragment>\n  ) : (\n    <Fragment>\n      <ProfileNotFound />\n    </Fragment>\n  );\n};\n\nIndividualProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByID: PropTypes.func.isRequired,\n  clearProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfileByID, clearProfile })(\n  IndividualProfile\n);\n"]},"metadata":{},"sourceType":"module"}