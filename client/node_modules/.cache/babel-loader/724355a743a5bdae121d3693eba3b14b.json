{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { addLike, dislike, deletePost } from '../../actions/post';\nimport swal from 'sweetalert';\n\nconst PostItem = ({\n  addLike,\n  dislike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    dislikes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  const customDelete = id => {\n    swal({\n      title: 'Are you sure?' //     text: 'Once deleted, you will not be able to recover this post!',\n      //     icon: 'warning',\n      //     buttons: true,\n      //     dangerMode: true,\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, likes.filter(like => like.user === auth.user._id).length > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), ' ', likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 36\n    }\n  }, likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => dislike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, dislikes.filter(dislike => dislike.user === auth.user._id).length > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), ' ', dislikes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 39\n    }\n  }, dislikes.length)), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/${_id}`,\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-comment-o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), ' ', comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  dislike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  dislike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","connect","Moment","addLike","dislike","deletePost","swal","PostItem","auth","post","_id","text","name","avatar","user","likes","dislikes","comments","date","showActions","customDelete","id","title","e","filter","like","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { addLike, dislike, deletePost } from '../../actions/post';\nimport swal from 'sweetalert';\n\nconst PostItem = ({\n  addLike,\n  dislike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, dislikes, comments, date },\n  showActions,\n}) => {\n  const customDelete = id => {\n    swal({\n      title: 'Are you sure?',\n//     text: 'Once deleted, you will not be able to recover this post!',\n//     icon: 'warning',\n//     buttons: true,\n//     dangerMode: true,\n    })\n  }\n\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        {showActions && (\n          <Fragment>\n            <button\n              onClick={(e) => addLike(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              {likes.filter((like) => like.user === auth.user._id).length >\n              0 ? (\n                <i className='fas fa-thumbs-up' />\n              ) : (\n                <i className='fa fa-thumbs-o-up'></i>\n              )}{' '}\n              {likes.length > 0 && <span>{likes.length}</span>}\n            </button>\n            <button\n              onClick={(e) => dislike(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              {dislikes.filter((dislike) => dislike.user === auth.user._id)\n                .length > 0 ? (\n                <i className='fas fa-thumbs-down' />\n              ) : (\n                <i className='fa fa-thumbs-o-down'></i>\n              )}{' '}\n              {dislikes.length > 0 && <span>{dislikes.length}</span>}\n            </button>\n            <Link to={`/posts/${_id}`} className='btn'>\n              <i className='fa fa-comment-o'></i>{' '}\n              {comments.length > 0 && <span>{comments.length}</span>}\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={(e) => deletePost(_id)}\n                type='button'\n                className='btn btn-danger'\n              >\n                <i className='fas fa-times'></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  dislike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, dislike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}