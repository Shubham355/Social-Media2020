{"ast":null,"code":"import React,{Fragment}from'react';import{Link}from'react-router-dom';var ProfilePost=function ProfilePost(_ref){var posts=_ref.posts;return/*#__PURE__*/React.createElement(\"div\",{className:\"profile-posts\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary my-1\"},\"Posts\"),posts.length>3?/*#__PURE__*/React.createElement(Fragment,null,posts.slice(0,3).map(function(post){return/*#__PURE__*/React.createElement(\"div\",{key:post._id,className:\"p_posts bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,post.text)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id,\"/likes\")},\"Like: \",post.likes.length)),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id,\"/dislikes\")},\"Dislike: \",post.dislikes.length)),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id)},\"Comments: \",post.comments.length)))));}),/*#__PURE__*/React.createElement(\"div\",{className:\"linkToRight\"},/*#__PURE__*/React.createElement(Link,{to:\"/profile/all-posts/\".concat(posts[0].user)},\"See All Posts\"))):/*#__PURE__*/React.createElement(Fragment,null,posts.map(function(post){return/*#__PURE__*/React.createElement(\"div\",{key:post._id,className:\"p_posts bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,post.text)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id,\"/likes\")},\"Like: \",post.likes.length)),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id,\"/dislikes\")},\"Dislike: \",post.dislikes.length)),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},/*#__PURE__*/React.createElement(Link,{to:\"/posts/\".concat(post._id)},\"Comments: \",post.comments.length)))));})));};export default ProfilePost;","map":{"version":3,"sources":["/home/shubham/Desktop/Socialmedia_MERN/client/src/components/profile/ProfilePost.js"],"names":["React","Fragment","Link","ProfilePost","posts","length","slice","map","post","_id","text","likes","dislikes","comments","user"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACjC,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,0BAAI,SAAS,CAAC,mBAAd,UADF,CAEGA,KAAK,CAACC,MAAN,CAAe,CAAf,cACC,oBAAC,QAAD,MACGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAe,CAAf,EAAkBC,GAAlB,CAAsB,SAACC,IAAD,qBACrB,2BAAK,GAAG,CAAEA,IAAI,CAACC,GAAf,CAAoB,SAAS,CAAC,2BAA9B,eACE,4CACE,6BAAID,IAAI,CAACE,IAAT,CADF,CADF,cAIE,4CACE,2CACE,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYF,IAAI,CAACC,GAAjB,UAAR,WACSD,IAAI,CAACG,KAAL,CAAWN,MADpB,CADF,CADF,cAME,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYG,IAAI,CAACC,GAAjB,aAAR,cACYD,IAAI,CAACI,QAAL,CAAcP,MAD1B,CADF,CANF,cAWE,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYG,IAAI,CAACC,GAAjB,CAAR,eACaD,IAAI,CAACK,QAAL,CAAcR,MAD3B,CADF,CAXF,CADF,CAJF,CADqB,EAAtB,CADH,cA2BE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,IAAD,EAAM,EAAE,8BAAwBD,KAAK,CAAC,CAAD,CAAL,CAASU,IAAjC,CAAR,kBADF,CA3BF,CADD,cAmCC,oBAAC,QAAD,MACGV,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,qBACT,2BAAK,GAAG,CAAEA,IAAI,CAACC,GAAf,CAAoB,SAAS,CAAC,2BAA9B,eACE,4CACE,6BAAID,IAAI,CAACE,IAAT,CADF,CADF,cAIE,4CACE,2CACE,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYF,IAAI,CAACC,GAAjB,UAAR,WACSD,IAAI,CAACG,KAAL,CAAWN,MADpB,CADF,CADF,cAME,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYG,IAAI,CAACC,GAAjB,aAAR,cACYD,IAAI,CAACI,QAAL,CAAcP,MAD1B,CADF,CANF,cAWE,0BAAI,SAAS,CAAC,mBAAd,eACE,oBAAC,IAAD,EAAM,EAAE,kBAAYG,IAAI,CAACC,GAAjB,CAAR,eACaD,IAAI,CAACK,QAAL,CAAcR,MAD3B,CADF,CAXF,CADF,CAJF,CADS,EAAV,CADH,CArCJ,CADF,CAqED,CAtED,CA4EA,cAAeF,CAAAA,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst ProfilePost = ({ posts }) => {\n  return (\n    <div className='profile-posts'>\n      <h2 className='text-primary my-1'>Posts</h2>\n      {posts.length > 3 ? (\n        <Fragment>\n          {posts.slice(0, 3).map((post) => (\n            <div key={post._id} className='p_posts bg-white p-1 my-1'>\n              <div>\n                <p>{post.text}</p>\n              </div>\n              <div>\n                <ul>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}/likes`}>\n                      Like: {post.likes.length}\n                    </Link>\n                  </li>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}/dislikes`}>\n                      Dislike: {post.dislikes.length}\n                    </Link>\n                  </li>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}`}>\n                      Comments: {post.comments.length}\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ))}\n          <div className='linkToRight'>\n            <Link to={`/profile/all-posts/${posts[0].user}`}>\n              See All Posts\n            </Link>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          {posts.map((post) => (\n            <div key={post._id} className='p_posts bg-white p-1 my-1'>\n              <div>\n                <p>{post.text}</p>\n              </div>\n              <div>\n                <ul>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}/likes`}>\n                      Like: {post.likes.length}\n                    </Link>\n                  </li>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}/dislikes`}>\n                      Dislike: {post.dislikes.length}\n                    </Link>\n                  </li>\n                  <li className='badge badge-light'>\n                    <Link to={`/posts/${post._id}`}>\n                      Comments: {post.comments.length}\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ))}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nProfilePost.propTypes = {\n  posts: PropTypes.object.isRequired,\n};\n\nexport default ProfilePost;\n"]},"metadata":{},"sourceType":"module"}